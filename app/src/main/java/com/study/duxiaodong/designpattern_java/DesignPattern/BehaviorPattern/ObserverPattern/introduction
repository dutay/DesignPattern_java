1. 含义
    观察者模式（发布订阅），定义对象间一种一对多的依赖关系，使得每当一个对象改变状态，则所有依赖它的对象都会得到通知并自动更新。
    其中一指的是被观察者(发布者);多指的是观察者（订阅者）



2. 具体结构
     1. 抽象被观察者角色：也就是一个抽象主题，它把所有对观察者对象的引用保存在一个集合中，每个主题都可以有任意数量的观察者。
                       抽象主题提供一个接口，可以增加和删除观察者角色。一般用一个抽象类和接口来实现。
     2. 抽象观察者角色：为所有的具体观察者定义一个接口，在得到主题通知时更新自己。
     3. 具体被观察者角色：也就是一个具体的主题，在集体主题的内部状态改变时，所有登记过的观察者发出通知
     4. 具体观察者角色：实现抽象观察者角色所需要的更新接口，一边使本身的状态与制图的状态相协调。

3.主要作用
    1.观察者模式就是在特定的时刻「被观察者发送通知」干特定的事情「观察者收到通知处理自己相应的事件」

4. 优点
    1.解耦，被观察者只知道观察者列表「抽象接口」，被观察者不知道具体的观察者
    2.被观察者发送通知，所有注册的观察者都会收到信息「可以实现广播机制」

5. 缺点
    1.如果观察者非常多的话，那么所有的观察者收到被观察者发送的通知会耗时
    2.观察者知道被观察者发送通知了，但是观察者不知道所观察的对象具体是如何发生变化的
    3.如果被观察者有循环依赖的话，那么被观察者发送通知会使观察者循环调用，会导致系统崩溃

6. 应用场景
    1. 对一个对象状态的更新，需要其他对象同步更新，而且其他对象的数量动态可变。
    2. 对象仅需要将自己的更新通知给其他对象而不需要知道其他对象的细节。



