1. 含义
    适配器模式，就是定义一个包装类，用于包装不兼容接口的对象
    包装类 = 适配器adapter
    被包装对象 = 被适配的类

2. 种类
    1.类的适配器
    2.对象的适配器



3. 使用步骤
     1. 创建目标接口
     2. 创建源类（Adaptee）；
     3. 创建适配器类（Adapter）
     4. 定义具体使用目标类，并通过Adapter类调用所需要的方法从而实现目标

4.主要作用
    1. 把一个类的接口变换成客户端所期待的另一种接口，从而使原本接口不匹配而无法一起工作的两个类能够在一起工作

5. 优点
    1.更好的复用性
      系统需要使用现有的类，而此类的接口不符合系统的需要。那么通过适配器模式就可以让这些功能得到更好的复用。
    2.透明、简单
      客户端可以调用同一接口，因而对客户端来说是透明的。这样做更简单 & 更直接
    3.更好的扩展性
      在实现适配器功能的时候，可以调用自己开发的功能，从而自然地扩展系统的功能。
    4.解耦性
      将目标类和适配者类解耦，通过引入一个适配器类重用现有的适配者类，而无需修改原有代码
    5.符合开放-关闭原则
      同一个适配器可以把适配者类和它的子类都适配到目标接口；可以为不同的目标接口实现不同的适配器，而不需要修改待适配类

6. 缺点
    1.过多的使用适配器，会让系统非常零乱，不易整体进行把握
7. 应用场景
    1.系统需要复用现有类，而该类的接口不符合系统的需求，
      可以使用适配器模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作
    2.多个组件功能类似，但接口不统一且可能会经常切换时，可使用适配器模式，使得客户端可以以统一的接口使用它们




